name: Run launch status update

on:
  workflow_dispatch:
    inputs:
      log_error:
        description: run log (STDERR)
        type: string
        required: false
      log_output:
        description: run log (STDOUT)
        type: string
        required: false
      ref:
        description: branch, tag, or SHA
        type: string
        required: true
      owner:
        description: owner on GitHub
        type: string
        required: false
        default: FCP-INDI
      repo:
        description: repository on GitHub
        type: string
        required: false
        default: C-PAC
      environment:
        description: Environment in which to run correlations
        type: environment
        required: false
        default: ACCESS
      status:
        type: choice
        options:
          - success
          - failure
          - pending

jobs:
  status_update:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment}}
    name: Update launch status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3
      - name: Load logs
        run: |
          printf "${{ inputs.log_output }}" > "out.log"
          printf "${{ inputs.log_error }}" > "err.log"
      - name: Store logs
        uses: actions/upload-artifact@v3.1.2
        with:
          name: launch-logs
          path: "*.log"
      - name: Get link to download logs
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GH_PAT }} " -s https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/artifacts | jq '[.artifacts[] | {name : .name, archive_download_url : .archive_download_url}]' | jq -r '.[] | select (.name == "launch-logs") | .archive_download_url') > url.txt
          echo "LOG_URL=$(cat url.txt)" >> "$GITHUB_ENV"
      - name: Finalize run check
        uses: guibranco/github-status-action-v2@v1.1.7
        with:
          authToken: ${{ secrets.GH_PAT }}
          context: Run regression test lite
          owner: ${{ inputs.owner }}
          repository: ${{ inputs.repo }}
          sha: ${{ inputs.ref }}
          state: ${{ inputs.status }}
          target_url: ${{ env.LOG_URL }}
