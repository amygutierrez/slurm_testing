name: Correlate Regression Test

on:
  workflow_dispatch:
    inputs:
      data_source:
        type: string
        required: true
      environment:
        description: 'Environment in which to run correlations'
        type: environment
        required: false
        default: ACCESS
      image:
        description: ''
        type: string
        required: true
      owner:
        description: 'owner on GitHub'
        type: string
        required: false
        default: "FCP-INDI"
      pipeline1:
        type: string
        required: true
      pipeline2:
        type: string
        required: true
      preconfig:
        type: string
        required: true
      ref:
        description: 'branch, tag, or SHA'
        type: string
        required: true
      repo:
        description: 'repository on GitHub'
        type: string
        required: false
        default: "C-PAC"


jobs:
  correlate:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment}}
    env:
      COMPARISON_PATH: ${{ secrets.COMPARISON_PATH }}
      DASHBOARD_PACKAGE: ${{ vars.DASHBOARD_PACKAGE }}
      GH_PAT: ${{ secrets.GH_PAT }}
      SLURM_TESTING_REPO: ${{ vars.SLURM_TESTING_REPO }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_WORK_DIR: ${{ secrets.SSH_WORK_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.3
      - name: Finalize run check
        uses: guibranco/github-status-action-v2@v1.1.7
        with:
          authToken: ${{ env.GH_PAT }}
          context: lite run ${{ inputs.preconfig }} ${{ inputs.data_source }}
          owner: ${{ inputs.owner }}
          repository: ${{ inputs.repo }}
          sha: ${{ inputs.ref }}
          state: success
          target_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts
      - name: Correlating
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          command_timeout: 200m
          script: |
            cd ${{ env.SSH_WORK_DIR }}
            pip install -U ${{ env.DASHBOARD_PACKAGE }}
            WORKSPACE=${{ env.SSH_WORK_DIR }}/regtest_lite/${{ inputs.ref }}/correlations
            mkdir -p ${WORKSPACE}
            cd ${WORKSPACE}
            CREATE_YAML=$(sbatch --wrap "cpac_regsuite_create_yml --pipeline1 ${{ inputs.pipeline1 }} --pipeline2 ${{ inputs.pipeline2 }} --workspace ${WORKSPACE} --branch ${{ inputs.ref }} --data_source ${{ inputs.data_source }}" | awk '{print $4}')
            YAML_FILE="${WORKSPACE}/${{ inputs.ref }}_${{ inputs.date_source }}.yml"
            CORRELATE=$(sbatch --dependency=afterok:"${CREATE_YAML}" --wrap "cpac_correlations --data_source ${{ inputs.data_source }} --branch ${{ inputs.ref }} $YAML_FILE" | awk '{print $4}')
            export TESTING_OWNER=$(echo ${{ env.SLURM_TESTING_REPO }} | cut -d'/' -f1)
            sbatch --dependency=afterok:"${CORRELATE}" --dependency=afterok:"$BUILD_SLURM_JOB" --export="OWNER=${{ inputs.OWNER }},REPO=${{ inputs.repo }},SHA=${{ inputs.sha }},TESTING_OWNER=${TESTING_OWNER}" --wrap "cpac_regsuite_generate_comment"

